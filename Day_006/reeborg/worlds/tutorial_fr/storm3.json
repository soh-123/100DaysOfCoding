{
  "robots": [
    {
      "x": 1,
      "y": 1,
      "_prev_x": 1,
      "_prev_y": 1,
      "_prev_orientation": 0,
      "objects": {},
      "_orientation": 0,
      "_is_leaky": true,
      "_trace_history": [],
      "_trace_style": "default",
      "_trace_color": "seagreen",
      "__id": 2,
      "model": "classic",
      "possible_initial_positions": [
        [
          1,
          1
        ]
      ]
    }
  ],
  "walls": {
    "1,2": [
      "north",
      "east"
    ],
    "1,1": ["north"]
  },
  "description": [
    "<h1>Une tâche ardue</h1>",
    "<p class='warning'>Attention à l'étang !</p>",
    "DIFFICULTY8",
    "<p>Il y a eu beaucoup de vent hier et la cour est plein de feuilles.</p>",
    "<p>Aidez Reeborg à les ramasser et ensuite les",
    "    <code>lance()</code> dans le compost.",
    "    Assurez-vous que",
    "    Reeborg termine à la maison <b>et qu'il ne tombe pas dans l'étang&nbsp;!</b></p>",
    "<p>Notez que la taille de la cour, et que la position de l'étang changent à chaque fois,",
    " mais qu'il y a toujours de l'espace autour de l'étang.</p>",
    "<p>N'essayez pas d'écrire une solution complète d'un seul trait. Décomposez le problème",
    "en diverses parties, visant à attendre en premier un certain point dans la cour,",
    "comme le coin supérieur gauche ou droit, ou juste au-dessus du compost, etc.,",
    "avec une orientation définie; testez ceci avec plusieur versions différentes du monde",
    "pour confirmer que votre code fonctionne correctement.</p>",
    "<h3>Une solution possible</h3>",
    "<p>Une solution possible est de tenter de nettoyer la cour en procédant par rangée (horizontale),",
    "d'abord allant de gauche à droite, puis de répéter le tout de droite à gauche.</p>",
    "<h3>Une approche différente</h3>",
    "<p>Une autre façon pourrait être d'utiliser une combinaison de",
    "<code>rien_devant()</code> et <code>mur_devant()</code>",
    "combiné avec des opérations logiques (en Python: <code>and, or, not</code>; ",
    "en Javascript: <code>&&, ||, !</code>) pour déterminer si l'étang bloque le chemin,",
    "et, si c'est le cas, de simplement le contourner pour éviter de nettoyer une même rangée deux fois.</p>",
    "<h3>What you need to know</h3>",
    "<h3>Ce que vous devez connaître</h3>",
    "<ul>",
    "    <li>Les fonctions <code>avance()</code>, <code>tourne_a_gauche()</code>,",
    "        <code>prend()</code>, ",
    "        et <code>lance()</code>.</li>",
    "    <li>Les conditions <code>object_ici()</code>, ",
    "        <code>transporte()</code>, et soit",
    "        <code>rien_devant()</code> ou <code>mur_devant()</code>.</li>",
    "    <li>Comment utiliser une boucle <code>while</code> et un énoncé <code>if</code>.</li>",
    "</ul>",
    "<p>Votre programme devrait également faire la tâche requise pour le monde <b>Tempête 2</b>.",
    "<p>Vous voudrez peut-être utiliser <code>pense(0)</code> pour voir le résultat plus rapidement.</p>"
  ],
  "small_tiles": false,
  "rows": 6,
  "cols": 6,
  "goal": {
    "position": {
      "image": "house",
      "x": 1,
      "y": 1
    },
    "objects": {
      "1,2": {
        "leaf": "all"
      }
    }
  },
  "onload": [
    "var nb, x, y, n, x_pond, y_pond, width, height;",
    "width = RUR.randint(5, 10);",
    "height = RUR.randint(6, 10);",
    "RUR.set_world_size(width, height);",
    "RUR.fill_background('grass');",
    "for(x=1; x<=width; x++){",
    "    RUR.add_background_tile('gravel', x, 1);",
    "}",
    "RUR.add_background_tile('pale_grass', 1, 2);",
    "x_pond = RUR.randint(3, width-1);",
    "y_pond = RUR.randint(4, height-1);",
    "RUR.add_background_tile('water', x_pond, y_pond);",
    "// We do not want the pond to be square",
    "RUR.add_decorative_object('grass_top_left', x_pond, y_pond);",
    "RUR.add_decorative_object('grass_top_right', x_pond, y_pond);",
    "RUR.add_decorative_object('grass_bottom_left', x_pond, y_pond);",
    "RUR.add_decorative_object('grass_bottom_right', x_pond, y_pond);",
    "for(n=1; n<=15; n++) {",
    "    x = RUR.randint(1, width);",
    "    y = RUR.randint(1, height);",
    "    if ((x<=2 && y<=2) || (x==x_pond && y==y_pond))  {continue;}",
    "    nb = RUR.randint(0, 3);",
    "    RUR.add_object('leaf', x, y, {'number': nb});",
    "}",
    ""
  ],
  "pre": "RUR.MAX_STEPS = 2000"
}
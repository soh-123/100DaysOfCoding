{
  "robots": [
    {
      "x": 1,
      "y": 1,
      "_prev_x": 1,
      "_prev_y": 1,
      "_prev_orientation": 0,
      "objects": {},
      "_orientation": 0,
      "_is_leaky": true,
      "_trace_history": [],
      "_trace_style": "default",
      "_trace_color": "seagreen",
      "__id": 6,
      "possible_initial_positions": [
        [
          1,
          1
        ]
      ],
      "model": "classic"
    }
  ],
  "walls": {},
  "description": "<h2>Color the world</h2>\nWe show how to use some built-in functions\nto change the color of individual background tiles.\n\nThe code in the onload editor is the following:\nINSERT_ONLOAD\n\nMost of the relevant code is in the Pre editor, as\nfollows:\nINSERT_PRE\n\n<h3>Changes from earlier versions</h3>\nVarious fruits are available as objects in\nReeborg's World. An earlier version include\nan orange <img src=\"src/images/orange.png\">\nand a corresponding image to use as a goal,\n<img src=\"src/images/orange_goal.png\">\nbut it has been removed since\n<code>paint_square(\"orange\")</code>\nmight have lead to a surprising result.\n<br>\nIf you wish, you can use \n<code>RUR.add_new_thing()</code>\nto add oranges as fruit to your world.\n    ",
  "small_tiles": false,
  "rows": 10,
  "cols": 10,
  "pre": "# Define a shorter synonym and use it\nadd = RUR.add_colored_tile\nadd(\"blue\", 1, 8)\nadd(\"#00ff00\", 3, 8)\nadd(\"rgb(255, 0, 0)\", 5, 8)\nadd(\"rgba(255, 0, 0, 0.3)\", 6, 8)\nadd(\"hsl(120, 100%, 25%)\", 8, 8)\nadd(\"hsla(120, 100%, 25%, 0.3)\", 9, 8)\n\n# Instead of using the world creation API, \n# we can use some Reeborg built-ins\n# but only at the position where the robot is\n\npaint_square(\"orange\")\n\n# Use some assertion so that this world can\n# be also used in automated testing\nassert \"orange\" == color_here()\n\n# Alternative spelling for color/colour\nassert \"orange\" == colour_here()\n\n# OOP form\n\nreeborg = UsedRobot(2, 2)\nreeborg.paint_square(\"yellow\")\nassert \"yellow\" == reeborg.color_here()\nassert \"yellow\" == reeborg.colour_here()\n\n# For automated tests, we might as well include\n# the French version\n\nfrom reeborg_fr import colorie, couleur_ici, RobotUsage\n\nmove()\ncolorie(\"rgb(0, 125, 125)\")\nassert \"rgb(0, 125, 125)\" == couleur_ici()\n\n# We must specify the orientation in English;\n# by default, it would be the French value which\n# would not be recognized while running this\n# program in English\nborg = RobotUsage(3, 3, \"east\")\nborg.colorie(\"#3399cc\")\nassert \"#3399cc\" == borg.couleur_ici()\n\n",
  "onload": "RUR.onload_set_programming_language(\"python\")\n"
}
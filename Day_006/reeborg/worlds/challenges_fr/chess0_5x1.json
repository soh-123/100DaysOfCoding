{
  "robots": [
    {
      "x": 1,
      "y": 1,
      "_prev_x": 1,
      "_prev_y": 1,
      "_prev_orientation": 0,
      "objects": {},
      "_orientation": 0,
      "possible_initial_positions": [
        [
          1,
          1
        ]
      ],
      "_is_leaky": true,
      "_trace_history": [],
      "_trace_style": "default",
      "_trace_color": "seagreen",
      "__id": 7,
      "model": "light blue"
    }
  ],
  "walls": {},
  "description": [
    "<h1>Le damier</h1>",
    "<h2> Cas particulier: 5 x 1</h2>",
    "<p>Cette tâche est limitée à un damier de taille fixe.",
    "Ceci peut servir de pratique en vue de résoudre le problème plus général.",
    "Si on se limite uniquement au cas particulier noté ici, le problème est beaucoup plus facile.</p>",
    "DIFFICULTY1",
    "<h1>Le problème général</h1>",
    "<p>Aidez Reeborg à mettre des jetons sur le damier. Reeborg a avec",
    "    lui plus de jetons qu'il n'en a besoin pour compléter la tâche.",
    "    Le problème général, avec un damier d'une taille inconnue est un véritable défi.",
    "    Vous ne devez pas utiliser de variables, ni d'arguments de fonctions.",
    "    Je vais vous offrir quelques  suggestions que vous êtes ",
    "    libres de suivre.</p>",
    "<p>Le programme que j'ai écrit comme solution fait en sorte que",
    "    Reeborg a rempli les cases en allant de gauche à droite en premier,",
    "    puis est allé sur la rangée suivante qu'il a remplie de droite",
    "    à gauche et a continué ainsi de façon alternée.</p>",
    "<img src='worlds/images/checker_board_1.png'>",
    "<img src='worlds/images/checker_board_2.png'>",
    "<p>Lorsque Reeborg est prêt à changer de rangée, il fait face au nord.",
    "    Si vous avez lu le tutoriel de programmation pour Reeborg,",
    "    vous savez qu'il a une boussole brisée ... elle lui permet",
    "    seulement de savoir s'il fait face au nord (haut de l'écran) ou non.",
    "    Dans un programme, ceci est obtenu par",
    "    <code>est_face_au_nord()</code>.  ",
    "    Avec la stratégie que j'avais adoptée, Reeborg saura qu'il a terminé",
    "    sa tâche si:",
    "<ul><li>Il est prêt à changer de rangée</li>",
    "    <li>Il fait face au nord</li>",
    "    <li>Un mur lui bloque la voie</li>",
    "</ul>",
    "    Pour un programme écrit avec Python,",
    "    ceci suggère qu'une solution pourrait être écrite de la façon suivante:",
    "</p>",
    "<pre class='python'>",
    "while not (est_face_au_nord() and mur_devant()):",
    "    répéter_quelque_chose()",
    "</pre>",
    "<p>Un deuxième élément important était de savoir comment déterminer",
    "    si Reeborg devait tourner vers sa gauche ou vers sa droite pour",
    "    commencer à déposer des jetons sur un rangée. L'information",
    "    dont on a besoin est celle-ci: savoir que Reeborg",
    "    fait face au nord et s'il a un mur à sa droite",
    "    ou non.</p>",
    "<p>Finalement, si on sait si Reeborg fait face au nord ou non, on peut",
    "    définir une fonction qui fera en sorte que Reeborg fera",
    "    face au nord.</p>",
    "<p>Je n'en dit pas plus sur l'approche que j'ai utilisée. ",
    "    À vous de déterminer le reste de la stratégie",
    "    à suivre, ou une toute autre stratégie, pour permettre à Reeborg d'accomplir sa tâche.</p>",
    "<h3>Ce que vous devez connaître</h3>",
    "<ul><li>Les fonctions <code>avance()</code>, <code>tourne_a_gauche()</code> et <code>depose()</code>.</li>",
    "<li>Les conditions <code>rien_devant()</code> ou <code>mur_devant()</code>,",
    "<code>rien_a_droite()</code> ou <code>mur_a_droite()</code>, et <code>est_face_au_nord()</code>.</li>",
    "<li>Comment utiliser des boucles <code>while</code> et des énoncés <code>if/else</code>.</li>",
    "<li>Savoir comment faire la négation d'une condition",
    "(mot-clé <code>not</code> en Python) et exiger que deux",
    "    conditions soient vérifiées en même temps avec",
    "    le mot clé <code>and</code> en Python, ou les opérateurs",
    "    équivalents en Javascript.</li>",
    "    <li>Comment définir des fonctions et savoir comment",
    "        utiliser le mot-clé <code>return</code> pour",
    "        terminer l'exécution d'une fonction.</li>",
    "</ul>",
    "DIFFICULTY9",
    "    "
  ],
  "small_tiles": false,
  "rows": 10,
  "cols": 10,
  "onload": [
    "var width, height, x, y, nb_object;",
    "",
    "width = 5;",
    "height = 1;",
    "",
    "RUR.set_model('light blue');",
    "RUR.set_world_size(width, height);",
    "",
    "",
    "for (x=1; x<= width; x++) {",
    "    for (y=1; y<=height; y++) {",
    "        if ( (x+y)%2 == 0) {",
    "            RUR.add_object(\"token\", x, y, {goal: true});",
    "            RUR.add_colored_tile(\"black\", x, y);",
    "        } else {",
    "            RUR.add_colored_tile(\"beige\", x, y);",
    "        }",
    "    }",
    "}",
    "// give Reeborg more than the number of tokens required",
    "// so that we cannot use the information about",
    "// whether or not we still have tokens to determine if",
    "// the task has been accomplished.",
    "RUR.give_object_to_robot(\"token\", width*height);",
    ""
  ]
}